(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{346:function(_,v,l){"use strict";l.r(v);var t=l(14),e=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"_1-1-引言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-引言"}},[_._v("#")]),_._v(" 1.1 引言")]),_._v(" "),v("ul",[v("li",[_._v("数据结构的含义：简答地说，数据结构(Data Structure)是计算机组织数据和存储数据的方式。更进一步地说，数据结构是指一组相互之间存在一种或多种特定关系的数据的组织方式和他们在计算机内的存储方式，以及定义在该组数据上的一组操作。合理的数据结构可降低程序设计的复杂性，提高程序执行的效率。")]),_._v(" "),v("li",[_._v("计算机解决一个具体问题时，一般需要经过以下几个步骤：\n"),v("ul",[v("li",[_._v("1.从具体的问题抽象出一个适当的数学模型；")]),_._v(" "),v("li",[_._v("2.设计一个求解该数学模型的算法；")]),_._v(" "),v("li",[_._v("3.用某种计算机语言编写实现该算法的程序，调试和运行程序直至最终得到问题的解答。")])])]),_._v(" "),v("li",[_._v("1976 年瑞士计算机科学家尼克劳斯·维尔特(Niklaus Wirth)曾提出一个著名公式："),v("code",[_._v("算法+数据结构=程序")]),_._v("。")])]),_._v(" "),v("h2",{attrs:{id:"_1-2-基本概念和术语"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-基本概念和术语"}},[_._v("#")]),_._v(" 1.2 基本概念和术语")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("数据、数据元素和数据项")]),_._v(" "),v("ul",[v("li",[_._v("数据：所有被计算机存储、处理的对象。")]),_._v(" "),v("li",[_._v("数据元素：数据的基本单位，在程序中作为一个整体而加以考虑和处理。")]),_._v(" "),v("li",[_._v("数据项：数据元素由数据项组成。在数据库中数据项又称为字段或域。它是数据的不可分割的最小标识单位。")])])]),_._v(" "),v("li",[v("p",[_._v("数据的逻辑结构")]),_._v(" "),v("ul",[v("li",[_._v("含义：数据的逻辑结构是指数据元素之间的逻辑关系。所谓逻辑关系是指数据元素之间的关联方式或“邻接关系”。")]),_._v(" "),v("li",[_._v("根据数据组织的形式，分为 4 类：\n"),v("ul",[v("li",[_._v("1.集合。集合中任意两个结点之间都没有邻接关系，组织形式松散。")]),_._v(" "),v("li",[_._v("2.线性结构。线性结构中结点按逻辑关系依次排列形成一条“链”，结点之间一个一个依次相邻接。")]),_._v(" "),v("li",[_._v("3.树形结构。树形结构具有分支、层次特性，其形态像自然界中的树，上层的结点可以和下层多个结点相邻接，但下层结点只能和上层的一个结点相邻接。")]),_._v(" "),v("li",[_._v("4.图结构。图结构最复杂，其中任何两个结点都可以相邻接。")])])]),_._v(" "),v("li",[_._v("数据的逻辑结构只是一种数学模型，体现了数据的组织方式，要在计算机中实现逻辑结构，还依赖它在计算机中的存储结构。")])])]),_._v(" "),v("li",[v("p",[_._v("数据的存储结构")]),_._v(" "),v("ul",[v("li",[_._v("一个存储结构包括两个部分：1.存储数据元素；2.数据元素之间的关联方式。")]),_._v(" "),v("li",[_._v("表示关联方式主要有顺序储存方式和链式储存方式。\n"),v("ul",[v("li",[_._v("顺序储存，是指所有存储结点存放在一个连续的存储区里。")]),_._v(" "),v("li",[_._v("链式存储，是指每个存储结点除了含有一个数据元素外，还包含指针，每个指针指向一个与本结点有逻辑关系的结点，用指针表示数据元素之间的逻辑关系。")])])]),_._v(" "),v("li",[_._v("除了上诉两种存储方式之外，还有索引存储方式和散列存储方式。")]),_._v(" "),v("li",[_._v("一种逻辑结构可以采用一种或几种存储方式来表达数据元素之间的逻辑关系，"),v("code",[_._v("相应的存储结构称为给定逻辑结构的存储实现或存储映像")]),_._v("。存储结构可以分别在机器级和语言级别上讨论。")]),_._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/panjiao119/article/details/80663685",target:"_blank",rel:"noopener noreferrer"}},[_._v("数据的逻辑结构和数据的存储结构"),v("OutboundLink")],1)])])]),_._v(" "),v("li",[v("p",[_._v("运算")]),_._v(" "),v("ul",[v("li",[_._v("运算是指在某种逻辑结构上施加的操作，即对逻辑结构的加工。这种加工以数据的逻辑结构为对象。")]),_._v(" "),v("li",[_._v("数据结构的三要素是：逻辑结构、存储结构、数据运算。")])])])]),_._v(" "),v("h2",{attrs:{id:"_1-3-算法及描述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-算法及描述"}},[_._v("#")]),_._v(" 1.3 算法及描述")]),_._v(" "),v("ul",[v("li",[_._v("概念： 运算的实现是指该运算的算法。算法是计算机科学的一个基本概念，也是程序设计的一个核心概念。一个算法规定了求解给定问题所需的处理步骤及其执行顺序，使得给定问题能在有限时间内被求解。")]),_._v(" "),v("li",[_._v("算法可以用某种语言加以描述。本书采用类 C 语言来描述算法。")])]),_._v(" "),v("h2",{attrs:{id:"_1-4-算法分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-算法分析"}},[_._v("#")]),_._v(" 1.4 算法分析")]),_._v(" "),v("ul",[v("li",[_._v("一个问题可以有多种不同的求解算法，这就产生了如何评价这些算法的问题。通过评价算法好坏的因素包括：\n"),v("ul",[v("li",[_._v("1.正确性。")]),_._v(" "),v("li",[_._v("2.易读性。")]),_._v(" "),v("li",[_._v("3.健壮性。即使输入非法数据，算法也能适当地做出反应或处理，不会产生预料不到的运行结果。")]),_._v(" "),v("li",[_._v("4.时空性。是指算法的时间性能和空间性能，前者是算法包含的计算量，后者是算法需要的存储量。")])])])]),_._v(" "),v("ol",[v("li",[v("p",[_._v("时间复杂度")]),_._v(" "),v("ul",[v("li",[_._v("时间复杂度常见的阶数有常数阶 O(1)；对数阶 O(log2n)、线性阶 O(n)、多项式阶 O(n Ｃ)和指数阶 O(Cⁿ)，C 为大于 1 的正整数。")]),_._v(" "),v("li",[_._v("常见的多项式阶有 O(n²)和 O(n³)，常见的指数阶有 O(2ⁿ)。")]),_._v(" "),v("li",[_._v("通常认为，时间复杂度具有指数阶的算法是实际不可计算的，而阶数低于平方阶的算法是高效率的。")]),_._v(" "),v("li",[v("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1769988",target:"_blank",rel:"noopener noreferrer"}},[_._v("时间复杂度与空间复杂度的计算"),v("OutboundLink")],1)]),_._v(" "),v("li",[v("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/50479555",target:"_blank",rel:"noopener noreferrer"}},[_._v("算法的时间与空间复杂度"),v("OutboundLink")],1)]),_._v(" "),v("li",[v("a",{attrs:{href:"https://coolliyong.github.io/docs/arithmetic/0.big_o_and_time.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("时间复杂度和大 O 表示法"),v("OutboundLink")],1)]),_._v(" "),v("li",[v("img",{attrs:{src:"https://pic3.zhimg.com/80/v2-e879535dab892ff8458d85bb5ff3648a_720w.webp",alt:"image"}})])])]),_._v(" "),v("li",[v("p",[_._v("空间复杂度")]),_._v(" "),v("ul",[v("li",[_._v("空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度。一个算法在执行期间所需要的存储空间量应包括以下三个部分：\n"),v("ul",[v("li",[_._v("1.程序代码所占用的空间")]),_._v(" "),v("li",[_._v("2.输入数据所占用的空间")]),_._v(" "),v("li",[_._v("3.辅助变量所占用的空间")])])])])])]),_._v(" "),v("h2",{attrs:{id:"_1-5-本书的组织结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-本书的组织结构"}},[_._v("#")]),_._v(" 1.5 本书的组织结构")]),_._v(" "),v("ul",[v("li",[_._v("第一章讨论问题的求解步骤。讨论数据结构、数据、数据元素、数据项、数据逻辑结构、数据存储结构、运算、算法时间复杂度和空间复杂度等概念。")]),_._v(" "),v("li",[_._v("第二、三章讨论线性结构。")]),_._v(" "),v("li",[_._v("第四章讨论树形结构。")]),_._v(" "),v("li",[_._v("第五章讨论图结构。")]),_._v(" "),v("li",[_._v("第六章讨论查找。")]),_._v(" "),v("li",[_._v("第七章讨论排序。")])]),_._v(" "),v("h2",{attrs:{id:"_1-6-小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-小结"}},[_._v("#")]),_._v(" 1.6 小结")]),_._v(" "),v("ul",[v("li",[_._v("数据结构是计算机科学中的一门综合性的专业基础课。")]),_._v(" "),v("li",[_._v("了解用计算机解决一个问题的步骤，这是一个渐进的过程，首先对实际问题进行数学建模，描述数据的逻辑结构，将处理要求转换为基本运算，然后建立对应的存储结构，以便能被计算机存储处理，设计出一个算法，最后编写程序。")]),_._v(" "),v("li",[_._v("掌握算法分析方法，能分析一个简单算法的时间复杂度和空间复杂度。")])]),_._v(" "),v("h2",{attrs:{id:"思考与练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#思考与练习"}},[_._v("#")]),_._v(" 思考与练习")]),_._v(" "),v("h3",{attrs:{id:"_1-填空题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-填空题"}},[_._v("#")]),_._v(" 1.填空题")]),_._v(" "),v("ol",[v("li",[_._v("从数据结构的观点看，通常所说的“数据”应分为三个不同的层次，即"),v("code",[_._v("原始数据")]),_._v("、"),v("code",[_._v("数据元素")]),_._v("、"),v("code",[_._v("数据项")]),_._v("。")]),_._v(" "),v("li",[_._v("数据项又称为"),v("code",[_._v("字段")]),_._v("或"),v("code",[_._v("域")]),_._v("，它是数据的不可分割的最小标识单位。")]),_._v(" "),v("li",[_._v("根据数据元素之间关系的不同特性，通常有"),v("code",[_._v("线性结构")]),_._v("、"),v("code",[_._v("图结构")]),_._v("、"),v("code",[_._v("树形结构")]),_._v("、"),v("code",[_._v("集合结构")]),_._v("四类基本逻辑结构，他们反映了四类基本的数据组织形式。")]),_._v(" "),v("li",[_._v("在一般情况下，一个算法的时间复杂度是"),v("code"),_._v("的函数。")]),_._v(" "),v("li",[_._v("常见算法时间复杂度的阶数有常数阶"),v("code"),_._v("、对数阶"),v("code"),_._v("、线性阶"),v("code"),_._v("、平方阶"),v("code"),_._v("、和指数阶"),v("code"),_._v("。通常认为，具有指数阶量级的算法是"),v("code"),_._v("的，而量级低于平方阶的算法是"),v("code"),_._v("的。")])]),_._v(" "),v("h3",{attrs:{id:"_2-应用题或解答题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-应用题或解答题"}},[_._v("#")]),_._v(" 2.应用题或解答题")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("什么是数据、数据元素以及数据项？它们有何区别？")]),_._v(" "),v("ul",[v("li",[_._v("数据：所有被计算机存储、处理的对象。")]),_._v(" "),v("li",[_._v("数据元素：数据的基本单位，在程序中作为一个整体而加以考虑和处理。")]),_._v(" "),v("li",[_._v("数据项：数据元素由数据项组成。在数据库中数据项又称为字段或域。它是数据的不可分割的最小标识单位。")])])]),_._v(" "),v("li",[v("p",[_._v("什么是数据的逻辑结构？什么是数据的存储结构？")]),_._v(" "),v("ul",[v("li",[_._v("数据的逻辑结构：是指数据元素之间的逻辑关系。数据的逻辑结构分为线性结构和非线性结构，线性表是典型的线性结构；集合、树和图是典型的非线性结构。")]),_._v(" "),v("li",[_._v("数据的存储结构: 存储结构是指数据结构在计算机中的映像，也称物理结构。它包括数据元素的表示和关系的表示，是逻辑结构用计算机语言的实现。数据的存储结构主要有：顺序存储、链式存储、索引存储和散列存储。")])])]),_._v(" "),v("li",[v("p",[_._v("数据逻辑结构与存储结构有什么关系？")]),_._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/f3edcbde776d4dfc8ec92198d767764b",target:"_blank",rel:"noopener noreferrer"}},[_._v("简述逻辑结构与存储结构的关系"),v("OutboundLink")],1)])])]),_._v(" "),v("li",[v("p",[_._v("用计算机实现例 1-2 地图的着色问题，需要经过哪些主要步骤？每个步骤的主要工作是什么？")]),_._v(" "),v("ul",[v("li",[_._v("C/230420.c")]),_._v(" "),v("li",[v("a",{attrs:{href:"https://blog.csdn.net/tengweitw/article/details/17641017",target:"_blank",rel:"noopener noreferrer"}},[_._v("地图染色算法"),v("OutboundLink")],1)])])])]),_._v(" "),v("h3",{attrs:{id:"_3-算法设计题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-算法设计题"}},[_._v("#")]),_._v(" 3.算法设计题")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("设计算法在整型数组 A[n]中查找值为 K 的元素，若找到，则输出其位置 i(0<=i<=n-1)，否则输出-1 作为标志，并分析算法的时间复杂度。")]),_._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/361636579",target:"_blank",rel:"noopener noreferrer"}},[_._v("算法复杂度分析"),v("OutboundLink")],1)])])]),_._v(" "),v("li",[v("p",[_._v("写出计算方阵 A[n][n]与 B[n][n]乘积 C[n][n]的算法，分析算法的时间复杂度。")])])])])}),[],!1,null,null,null);v.default=e.exports}}]);